%微分方程，epsilon是参数
clc,clear
figure
options = odeset('RelTol',1e-7,'AbsTol',1e-7);
for i = [0.001,-0.001,0:pi/5:2*pi]
    initialy = zeros(4,1)+[cos(i);sin(i);0;1];
    [t,sol] = ode45(@unknown,[0,10],initialy,options);
    plot(sol(:,1),sol(:,2))
    hold on
end
x0=linspace(-1,1,1000);
x1=[x0,fliplr(x0)];
plot(x1,[sqrt(1-x0.^2),-sqrt(1-x0.^2)],'--')
xlim([-2,2]);
ylim([-2,2]);

function drot=rotation(t,cor)%generated by angular momentum, cor=[x,y,px,py]
drot=[-cor(2);cor(1);-cor(4);cor(3)];
end
function dunknown=unknown(t,cor)
x=cor(1);
y=cor(2);
px=cor(3);
py=cor(4);
depsilon_x = -((px^2*py* y^2 *(x^2 + y^2) - 2* px* py^2* x* y* (x^2 + y^2) + ...,
     2* px* x* y* sqrt(x^2 + y^2) + py^3* x^2* (x^2 + y^2) + ...,
     py* (y^2 - x^2)* sqrt(...,
      x^2 + y^2))/((px^2 + py^2) *(x^2 + y^2)* (py *x - px* y)^2 - ...,
     2 *sqrt(x^2 + y^2) *(py *x - px* y)^2 + x^2 + y^2));
depsilon_y = (2 *py* x* y* sqrt(x^2 + y^2) + px* (x^2 - y^2)* sqrt(x^2 + y^2) +..., 
   px* py^2* x^2 *(x^2 + y^2) - 2 *px^2* py* x* y* (x^2 + y^2) +..., 
   px^3* y^2* (x^2 + y^2))/(x^2 + y^2 -..., 
   2* (py* x - px* y)^2 *sqrt(...,
    x^2 + y^2) + (px^2 + py^2)* (py* x - px* y)^2* (x^2 + y^2));
depsilon_px = -((px^2 *y^3 + px *py* x *(x^2 - y^2) - y* sqrt(x^2 + y^2) + ...,
     py^2* (2* x^2* y + y^3))/(-2* (py* x - px* y)^2 *(x^2 + y^2) + (x^2 +..., 
       y^2)^(3/2) + (px^2 + py^2) *(py *x - px *y)^2 *(x^2 + y^2)^(3/2)));
depsilon_py = -((-py^2*x^3 + px *py* y *(x^2 - y^2) + x* sqrt(x^2 + y^2) - ...,
     px^2* (x^3 + 2* x* y^2))/(-2* (py* x - px *y)^2 *(x^2 + y^2) + (x^2 +..., 
       y^2)^(3/2) + (px^2 + py^2) *(py *x - px *y)^2 *(x^2 + y^2)^(3/2)));
dunknown=[depsilon_x;depsilon_y;depsilon_px;depsilon_py];
end